% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_pca.R
\name{draw_pca}
\alias{draw_pca}
\title{Draw PCA Plot with Density and Box Plots}
\usage{
draw_pca(
  df,
  var_names = NULL,
  Group = NULL,
  group_labels = NULL,
  colors = NULL,
  x_limits = NULL,
  y_limits = NULL,
  show_stats = TRUE,
  point_size = 3,
  top_n_vars = 5
)
}
\arguments{
\item{df}{A data frame containing the variables for PCA analysis}

\item{var_names}{Optional character vector specifying the names of variables to be used in PCA.
If NULL, all numeric columns except 'Group' and 'SampleID' will be used.}

\item{Group}{Optional character vector specifying the levels of groups.
If NULL (default), all groups in the data will be used.}

\item{group_labels}{Optional character vector for custom group labels}

\item{colors}{Optional vector of colors for groups}

\item{x_limits}{Optional numeric vector of length 2 specifying x-axis limits}

\item{y_limits}{Optional numeric vector of length 2 specifying y-axis limits}

\item{show_stats}{Logical, whether to show PERMANOVA results (default: TRUE)}

\item{point_size}{Numeric, size of points in the plot (default: 3)}

\item{top_n_vars}{Numeric, number of top contributing variables to show (default: 5, 0 for no variables)}
}
\value{
A ggplot object containing the combined PCA plot
}
\description{
Creates a comprehensive PCA plot with density distributions and box plots
for visualizing group differences in multivariate data.
}
\examples{
\dontrun{
# Example 1: Basic usage with all groups
set.seed(123)
df_example <- data.frame(
  SampleID = paste0("Sample_", 1:60),
  Group = rep(c("Control", "Treatment1", "Treatment2"), each = 20),
  Var1 = rnorm(60, mean = 10, sd = 2),
  Var2 = rnorm(60, mean = 15, sd = 3),
  Var3 = rnorm(60, mean = 20, sd = 4)
)

# Use all groups automatically
pca_plot1 <- draw_pca(df = df_example)

# Example 2: Specify groups and customize appearance
pca_plot2 <- draw_pca(
  df = df_example,
  Group = c("Control", "Treatment1"),  # Use only two groups
  colors = c("#1F77B4", "#FF7F0E"),
  point_size = 4,
  show_stats = TRUE
)

# Example 3: Complex customization
set.seed(456)
df_complex <- data.frame(
  SampleID = paste0("Sample_", 1:100),
  Group = rep(c("G1", "G2", "G3", "G4"), each = 25),
  Value1 = rnorm(100, 10, 2),
  Value2 = rnorm(100, 15, 3),
  Value3 = rnorm(100, 20, 4),
  Value4 = rnorm(100, 25, 5)
)

# Make sure group_labels match the number of groups in the data
pca_plot3 <- draw_pca(
  df = df_complex,
  var_names = c("Value1", "Value2", "Value3", "Value4"),  # Include all variables
  Group = c("G1", "G2", "G3", "G4"),  # Specify all groups
  group_labels = c("Control", "Low", "Medium", "High"),  # Labels match group number
  colors = c("#1F77B4", "#FF7F0E", "#2CA02C", "#D62728"),
  x_limits = c(-4, 4),
  y_limits = c(-4, 4),
  top_n_vars = 3
)

# Example 4: Minimal plot with no variable arrows
pca_plot4 <- draw_pca(
  df = df_complex,
  Group = c("G1", "G2"),  # Use only two groups
  show_stats = FALSE,
  top_n_vars = 0  # No variable arrows
)

# Example 5: Using subset of variables and groups
pca_plot5 <- draw_pca(
  df = df_complex,
  var_names = c("Value1", "Value2"),  # Use only two variables
  Group = c("G1", "G2", "G3"),  # Use three groups
  group_labels = c("Control", "Treatment1", "Treatment2"),  # Labels match selected groups
  colors = c("#1F77B4", "#FF7F0E", "#2CA02C"),
  point_size = 3,
  top_n_vars = 2
)

# Save plots
ggsave("pca_all_groups.png", pca_plot1, width = 10, height = 10, dpi = 300)
ggsave("pca_custom.png", pca_plot3, width = 12, height = 12, dpi = 300)
}
}
